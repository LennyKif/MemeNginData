memeNgin:
  about: MemeNginは、ミームクリエイターのために開発された、ノードベースの画像制作・加工エンジンです。
  detail: MemeNginでは、画像にテキストを追加するだけでなく、形状、色、テキスト、合成などの論理回路を構築することで、ニーズに合ったミーム画像マシンを設計できます。 このように設計されたマシンは、最小限の労力で新しいミームを作成できるテンプレートになります。 画像修正の反復プロセスは、ロジックノードを使用してプログラムし、生産的な用途で使用することもできます。
  
  full_version_title: MemeNginを購入すると
  full_version:
    - SteamworksのMemeNginコミュニティに積極的に参加できます。
    - Steamワークショップを利用して、自分のプロジェクトを他のユーザーと共有し、他のユーザーの共有プロジェクトからインスピレーションを得ることができます。
    - MemeNginの開発プロジェクトを手助けすることができます。

  links:
    discord: Discordサーバー
    roadmap: Trelloのページ
    subreddit: Sub-reddit
    source_code: Github
    translate: 英語を含む、MemeNginの翻訳を手伝っていただける方を募集しています。 詳細はGithubページから確認できます。

  text_open_source: MemeNginはオープンソースプロジェクトです。 コミュニティの皆様のご意見を参考に、プロジェクトの方向性を決定していきます。 MemeNginのロードマップは、Trelloのページにあります。

ui_general:
  okay: OK
  agree: 同意する
  disagree: 同意しない
  cancel: キャンセル
  close: 閉じる
  save: 保存
  do_not_save: 保存しない
  update: アップデート
  publish: 公開する
  steam_must_run: Steamクライアントが起動している必要があります！！！
  create: 作成
  subscribe: サブスクライブ
  unsubscribe: サブスクリプションの解除
  success: 成功！
  fail: 失敗
  language: 言語

experimental: Experimentalノードは現在動作が不完全ですが、将来実装される可能性のあるノードを示しています。今後のアップデートで改良、修正、または削除される可能性があります。

close_dialog:
  title: MemeNgin
  message: MemeNginを終了しようとしています。変更内容を保存しますか？

language_dialog:
  save_before: 続行する前に、現在の作業内容を保存してください。
  help_translate: 翻訳されていない言語やメニューは英語で表示されます。MemeNginでは、英語を含む、プロジェクトの翻訳を手伝っていただける方を募集しています！
  go_help: MemeNginの翻訳を手伝う。（Githubページへ飛びます）

publish_dialog:
  title: Steamワークショップに公開
  title_item: タイトル
  description: 説明を入力
  age_rating: 対象年齢の区分
  tags: タグ
  derivative: 他のユーザーによる派生作品の製作を許可する
  agree_terms: 利用規約に同意します*
  thumbnail: サムネイル
  find_on_steam: Steamで開く
  required: '* は必須入力項目です'
  success: プロジェクトが正常に公開されました。Steamに反映されるまで時間がかかる場合があります。
  fail: プロジェクトのリリースに失敗しました。時間をおいてもう一度試してみてください。解決しない場合は開発者に連絡してください。

age_dialog:
  title: 対象年齢について
  message: 若いユーザーの多くがミームを使用しているため、性的または暴力的なコンテンツをリリースする場合は特に注意する必要があります。 以下のテーブルを参考に、ミームの年齢区分を判別してください。 判断が難しい場合は、より高い年齢区分を選択することをお勧めします。 実際の区分よりも低く設定されたコンテンツは、ワークショップから除外される場合があります。
  everyone: Everyone (0-12)
  everyone_desc: > 
    性的・暴力的表現なし
  questionable: Questionable (13-17)
  questionable_desc: "Everyoneに属するかどうか判別が難しい場合"
  mature: Mature (18-)
  mature_desc: "軽度な性的・暴力的表現"
  ban: Ban
  ban_desc: "ヌード、性行為、または残虐的な表現を含む"

legal_dialog:
  title: 利用規約
  steam_tos:
    title: Steamの利用規約
    must_not: "あなたの作品は、これらの事項に違反してはいけません:"
    subscriber_agreement: Steam 利用規約
    online_conduct: Steam オンライン規則
    rules: Steamのルールとガイドライン：掲示板、レビュー、ユーザー生成コンテンツ
    artwork: Steamコミュニティアートワークのガイドライン
  mmng_tos:
    title: MEMENGIN の利用規約および UGC ガイドライン
    must_not: "あなたの作品に、以下の内容を含めてはいけません:"
    harmful: · 有害なリンクまたはメッセージ（そのような内容のQRコードも含む）.
    offensive: · 不快なコンテンツ (例`:` 人種差別、残虐的表現)
    pornographic: · 性的なコンテンツ (例`:` 性的表現のあるスプレー・デカール、ヌード)
    must_owner: アップロードされた作品の所有者であること。
    stolen: · 他の所有者の作品（加工したものを含む）の無断アップロードを禁じます。
  agree_legal: "作品をアップロードする場合、Steamワークショップ利用規約に同意する必要があります。 (ここをクリック)"

new_document_dialog:
  title: 新しいミームを作成
  message: プロジェクト名を入力してください

introductions:
  intro: こんにちは！ MemeNginをご利用いただきありがとうございます。MemeNginは、画像を変更するすべてのステップをカスタマイズできるノードベースの画像制作・加工エンジンであり、ミームやデザインテンプレートの作成に向いています。
  nodes: プロジェクトは入力ノードと出力ノードで構成され、ノードと接続はそれらの間の相関関係を表しています。ノードは画像の変更、値、ロジックなどの固定操作を実行する基本要素です。
  inputs: Inputsノードは、プロジェクトに重要な影響を与える値を格納する場所です。​​テキスト、整数、実数、色などを含めることができます。
  output: Outputノードは、プロジェクトの最終結果を表示したものです。画面の右上隅にある「Save as image」をクリックすると、結果を画像として保存できます。
  workshop: MemeNginでは、Steamワークショップを通じてミームを共有できます。ここで共有されるプロジェクトは、他の人がテキストや色などを改変したミームを作ったり、新しいミームのアイデアを得るのに役立ちます。
  startup_menu: 左上隅のスタートメニューをクリックして、チュートリアル、プロジェクト、Steamワークショップの検索機能にアクセスします。 ※MemeNginは現在開発中のため、予期せぬ事態が発生する場合がございますので、あらかじめご了承ください。
  dont_show_again: 起動時にこのダイアログを表示しない

tutorials:
  intro: はじめまして！ MemeNginをご利用いただきありがとうございます。 このチュートリアルでは、MemeNginの基本的な機能について説明します。
  startup_menu: 画面左上隅の青色のスタートメニューボタンを押すと、スタートアップメニューが開きます。このメニューから、最近開いたプロジェクトやチュートリアル、Steamワークショップで共有されている他のユーザーの作品にアクセスできます。
  app_bar: 画面上部のこのメニューから、プロジェクトの保存や読み込みや、作業内容の取り消し・やり直し（アンドゥ・リドゥ）ができます。
  node_library: 画面の左側にあるノードライブラリには、MemeNginの主な機能が含まれています。
  node_shorcut: エディタにフォーカスしているときにSpaceキーを押すと、ノードライブラリと同じ機能を持つショートカットメニューを表示できます。
  editor: エディタでは、ノードベースのワークフローで作業を整理することができます。このワークフローは、入力と出力、そして作業するノードで構成されています。
  inputs: Inputsノードは、可変ノードと画像ノードを含むことができるバンドルであり、作業に大きな変更をもたらす要素を選択してグループ化できます。 これらのノードをInputsノードに格納させると、OutputノードにInputsに格納したノードのプロパティが表示されるようになり、これらの値を変更するだけで作業をカスタマイズできるように設計されています。 
  output: Outputノードは、プロジェクトの結果を表示するノードです。他のノードよりも大きく表示されるので認識しやすくなっています。プロジェクト(*.mmng)を保存する際、このノードの結果画像はサムネイルとして保存されます。Steamワークショップに作品を共有する際には、このノードの入力値を接続する必要があります。
  preview: プレビューメニューは画面右上にあり、出力ノードの画像をプレビューします。 ノード操作中に発生した変更が最終結果にどのように反映されるかをすぐに確認できます。 作業内容を画像として保存したり、マウスホイールを動かしたりホイールドラッグをして画像サイズに合わせて移動やズームしたりできます。
  properties: 画面右下のメニューで、アクティブなノードのプロパティ値を変更できます。 ほとんどのプロパティでは、プロパティ値の左側にあるチェックボックスをオンにすることで、エディタ上でノードの入力を追加することができ、これによって入力ノードを繋げることができます。
  library:
    shape: Shapeノードは、画像の形状を変換するノードのセットです。 1つの画像を入力値として受け取り、それを変換された画像として出力します。これには、画像の変換（およびトリミング）、キャンバスのサイズ変更などが含まれます。
    color: Colorノードは、法則に従って画像の色を変更するノードのセットです。明るさとコントラスト、色相シフト、LUTなどの一般的な色変更オプションがあります。
    composite: Compositeノードは、前景・背景となる画像ノード1つずつを入力値として受け取り、コンポジションを実行します。 blendノードを使用すると、乗算やオーバーレイなどのブレンドが行えます。 ほとんどのCompositeノードでは、変換ウィジェットがアクティブになり、ウィジェットを使用して前景画像の移動・回転・拡大縮小が行えます。
    create: Createノードは、画像、図形、テキスト、市松模様などを作成できるノードのセットです。ここのノードは、前述のShapeノードとColorノードの入力値として使用できます。 将来的には、QRコードノードなど、生産的な目的で使用できるノードも追加される予定です。
    logic: Logicノードは、変数ノードなどの他のノードの入力値として使用されるノードのセット、または分岐やスタイル設定などの論理的な問題を解決するノード、および入力、出力、複製などのタスクを論理的に設計するのに役立つノードです。 将来的には、算術演算や制御演算など、作業を論理的にプログラムできるノードが追加される予定です。 ここのいくつかのノードは実験段階として不完全であることに注意してください。
  property:
    node: Propertyノードは、文字列、整数、小数、ベクトル、色などの値を含むノードであり、別のノードの公開されたプロパティ値に接続することで、ノードの外部でこの値を変更できます。
    expose: プロパティ値の左側にあるチェックボックスをクリックすると、ほとんどのプロパティを公開できます。公開されたプロパティはノードの左側にソケットとして表示され、Propertyノードの結果値を接続できます。
    propagate: Propertyノードは連続的に接続でき、値は左側のノードから右側のノードに転送されます。
  image:
    rule_one: 画像を作成する場合、特別な条件がない限り、元の画像または入力ノードの画像サイズのままになります。ノードで模様や色などを新しく作成する場合、画像サイズは1024 x 1024に固定されます。
    rule_two: 画像サイズを変更する場合、ResizeノードまたはTransform2Dノードを使用する方法があります。このノードによって変更された画像のサイズは、後続のノードでも同じままです。
    rule_three: 入力値として2つ以上の画像を取得するCompositeノードの場合、背景画像のサイズは新しいノードのサイズに変更されます。
  navigation:
    zoom: マウスホイールを動かして、エディタ領域をズームイン/ズームアウトできます。
    zoom_selected: ノードを選択して、Fキーまたは画面上部の「Zoom selection」ボタンを押すと、選択した項目にフォーカスして拡大します。 画面左のノードライブラリでInputsノードまたはOutputノードを選択すると、それぞれのノードを作成する代わりに、同様のズーム効果が適用されます。
    panning: マウスの右ボタンまたはホイールボタンのドラッグで、エディタ領域内を移動できます。
    preview: エディターと同じ方法で、画面右上のプレビューのズーム、移動が行えます。
  logics:
    string: Stringsの文字列はTextノードに入力でき、QRコードなどの入力値としても使用できます。
    float: Floatは、10進数表記で小数第三位までを含む0から1までの数値で、さまざまなプロパティ値に使用されます。 MapFloatノードを使用して値の範囲を調整できます。
    integer: Integer(Int)は、小数を含まない0から100の整数値であり、主にカウントを入力として受け取るノードに使用されます。
    corelation: 下の例のように、1つのプロパティ値は、同時に複数のノードに影響を与えることができます。
